defaultConstructor.javadoc.desc=Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
defaultConstructor.bodyComment=Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
copyConstructor.javadoc.desc=Instantiates a {0} copying the state of another {0}
copyConstructor.javadoc.param.other=The original {0} from which to copy state.
copyConstructor.javadoc.param.propertyPath=A restricting '{'@link PropertyPath'}' that defines which nodes of the source object tree should actually be copied.
copyConstructor.javadoc.exception=If parts or all of the source object tree cannot be copied.
clonePlugin.usage.generateTools=Generate utility classes as source code. If you say "no" here, you will have to add the plugin JAR\
  to the runtime classpath of the generated class domain.
clonePlugin.usage=Generates Cloneable JAXB classes. Optionally, copy constructor and partial clone functionality can be generated.
clonePlugin.usage.options=Options
clonePlugin.usage.cloneThrows=declare CloneNotSupportedException to be thrown by 'clone()' (yes), or suppress throws clause (no). Default: no
clonePlugin.usage.copyConstructor=Generates a copy constructor on each of the classes generated from the current XSD model.
clonePlugin.usage.narrow=Uses copy constructors for all child nodes in the object tree as long as they are available. This\
                           will cause the new instance to be as narrow as possible to the declared types.
clonePlugin.usage.partialClone=Generates an additional 'clone'-method and copy-constructor (if constructors are to generated at all)\
  that takes a PropertyPath instance to restrict the copy operation to selected nodes in the object tree.
comment.withMethod=Sets the new value of "{0}" (any previous value will be replaced)
comment.withMethod.param=New value of the "{0}" property.
comment.addMethod=Adds the given items to the value of "{0}"
comment.addMethod.param=Items to add to the value of the "{0}" property
comment.addBuilderMethod=Returns a new builder to build an additional value of the "{0}" property.\nUse '{'@link end()'}' to return to the current builder.
comment.addBuilderMethod.return=a new builder to build an additional value of the "{0}" property.\nUse '{'@link end()'}' to return to the current builder.
comment.withBuilderMethod=Returns a new builder to build the value of the "{0}" property (replacing previous value).\nUse '{'@link end()'}' to return to the current builder.
comment.withBuilderMethod.return=A new builder to build the value of the "{0}" property.\nUse '{'@link end()'}' to return to the current builder.
