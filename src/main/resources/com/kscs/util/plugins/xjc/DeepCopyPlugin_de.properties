defaultConstructor.javadoc.desc=Generiert durch das copy-constructor Plugin. Wird von JAXB ben\u00F6tigt
defaultConstructor.bodyComment=Keine Implementierung notwendig
copyConstructor.javadoc.desc=Erzeugt eine "{0}"-Instanz als Kopie des Zustands einer anderen {0}
copyConstructor.javadoc.param.other=Urspr\u00FCngliches "{0}"-Objekt von dem der Zustand kopiert wird.
copyConstructor.javadoc.param.propertyPath=Einschr\u00E4nkender '{'@link PropertyPath'}' durch den definiert wird, welche Teile des Quell-Objektbaumes tats\u00E4chlich kopiert werden.
copyConstructor.javadoc.exception=Wenn Teile des Quell-Objektbaumes nicht kopiert werden k\u00F6nnen.
usage=Generiert JAXB-Klassen, deren Instanzen mittels einer "createCopy"-Methode oder eines Copy-Konstruktors kopiert werden k\u00F6nnen.
usage.generateTools=Generiere Hilfsklassen als Quelltext (y). Wenn dies ausgeschaltet ist, muss sich das Plugin-JAR zur Laufzeit im Klassenpfad \
  der generierten Klassendefinitionen befinden.
usage.constructor=Erzeugt einen Copy-Konstruktor f\u00FCr jede generierte Klasse des XSD-Modells.
usage.narrow=F\u00FCr untergeordnete Knoten im zu kopierenden Objektbaum werden ebenfalls die Copy-Konstruktoren der deklarierten Typen verwendet. \
  soweit diese vorhanden sind und die Typen der entsprechenden Instanzen ebenfalls aus dem XSD-Model generierte Klassen sind. Dies erzeugt eine m\u00F6glichst \
  "schmale" Kopie des Ausgangsobjekts, was in bestimmten F\u00E4llen n\u00FCtzlich sein kann. Ein Unterknoten, dessen Typ nicht im aktuellen XSD-Modell deklariert ist, \
  wird immer wie bei der 'createCopy()'-Methode kopiert. Ist diese Option "no", gilt dies auch f\u00FCr generierte Typen. Standard: no.
usage.partial=Generiert zus\u00E4tzlich eine 'createCopy()'-Methode und einen Konstruktor (wenn "-constructor=yes"), \
  mit dem sich Objekte partiell kopieren lassen. Dabei wird ein PropertyPath-Objekt mitgegeben, welches die zu kopierenden Knoten des Objektbaumes angibt.
